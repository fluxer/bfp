#!/bin/sh

set -e

# enable Kernel Mode Setting (KMS)
kms_enable() {
    # FIXME: implement
    false
}

# disable Kernel Mode Setting (KMS)
kms_disable() {
    # FIXME: implement
    false
}

# install nVidia binary blob driver
install_nvidia() {
    # saves some computation
    if [ ! -d "/var/local/spm/nvidia" ] && spm-tools online;then
        spm binary -aDu nvidia
    # if the system is offline attempt to install from already fetched tarball
    elif [ ! -d "/var/local/spm/nvidia" ];then
        spm --offline=True binary -aDu nvidia
    fi
}

# uninstall nVidia binary blob driver
remove_nvidia() {
    if [ -d "/var/local/spm/nvidia" ];then
        # since the package partitially replaces mesalib it gets detected as
        # runtime dependency instead of mesalib, ignoring the reverse
        # dependencies because the original libGL and friends will be restored
        # from the post-remove action
        spm --ignore="$(spm local -pr nvidia)" binary -r nvidia
    fi
}

# install AMD binary blob driver
install_amd() {
    # saves some computation
    if [ ! -d "/var/local/spm/amd-catalyst" ] && spm-tools online;then
        spm binary -aDu amd-catalyst
    # if the system is offline attempt to install from already fetched tarball
    elif [ ! -d "/var/local/spm/amd-catalyst" ];then
        spm --offline=True binary -aDu amd-catalyst
    fi
}

# uninstall AMD binary blob driver
remove_amd() {
    if [ -d "/var/local/spm/amd-catalyst" ];then
        # since the package partitially replaces mesalib it gets detected as
        # runtime dependency instead of mesalib, ignoring the reverse
        # dependencies because the original libGL and friends will be restored
        # from the post-remove action
        spm --ignore="$(spm local -pr amd-catalyst)" binary -r amd-catalyst
    fi
}

# enable a service
service_enable() {
    # FIXME: implement
    false
}

# disable a service
service_disable() {
    # FIXME: implement
    false
}

# start a service
service_start() {
    rc.d start --stopped "$1"
}

# stop a service
service_stop() {
    rc.d stop --started "$1"
}