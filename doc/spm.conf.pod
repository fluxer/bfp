=head1 NAME

spm.conf - Source Package Manager configuration file

=head1 DESCRIPTION

spm.conf is the configuration file used by Source Package Manager. It is
divided into sections - spm, fetch, compile, install and merge. These
sections represent options used at different stage of the software
building process, except for spm which affects all stages.

=head1 OPTIONS

=head2 CACHE_DIR

Set the directory where the repositories, sources and tarballs will be
placed. The repositories directory holds all recipes (SRCBUILD) to build
targets. The sources directory is the place where all source tarballs are
fetched. The tarballs directory holds all compressed archives which are
ready to be merged.

Default: /var/cache/spm

=head2 BUILD_DIR

Set the directory where the sources should be prepared and compiled. This
directory may consume a lot of space over time so you may want to change it.

Default: /var/tmp/spm

=head2 ROOT_DIR

Set the system root directory. Unless you want to bootstrap a system with
SPM it should not be changed. ROOT_DIR must include backslash at the end
of the string, e.g. /home/joe/bootstrap/.

Default: /

=head2 GPG_DIR

Set the GnuPG home directory. It would make sense to change it only to make the
imported keys temporary by setting this option to /tmp/spm-gpg or /run/spm-gpg.

Default: /etc/spm/gpg

=head2 SHELL

Set which Shell to use. It makes no difference if the value is full path or
not. The executable will be found based on the environmental variable PATH.
For some actions arrays support is required so make sure it supports them
otherwise expect failures. Your best bet is mksh (MirBSD Korn shell).

Default: bash

=head2 IGNORE

Set targets to be ignored when building and removing.

Default: filesystem

=head2 NOTIFY

Set wheather to use inotify to monitor for database chanages. If you do not plan
to run multiple instances of SPM or you are getting "Not enough free space"
error during initializtion than you can set it to False.

Default: True

=head2 OFFLINE

Set wheather to not even try to connect to the internet when not strictly
required. This option is useful in cases when your internet connection is not
very good (slow) and you know that there is no need to be ping remote servers
for the operation SPM is told to do.

Default: False

=head2 MIRROR

Set whether to use mirrors or not. If set to true mirrors will be pinged
and sources fetched from them if available. As fallback is used the
original source defined in the build script (SRCBUILD). 

Default: True

=head2 TIMEOUT

Set the time in seconds to wait before bailing out when mirrors and
internet connection are checked.

Default: 30

=head2 VERIFY

Set wheather to verify PGP signatures of downloads. Not every host provides
signatures for their content but it's becoming manditory.

Default: True

=head2 CHOST

Set the environmental variable CHOST when building software. The CHOST
flag specifies the target hardware platform, (ppc, i386, i586 etc), so
that the code is compiled with the right instruction set.

Default: @MACHINE@

=head2 CFLAGS

Set the environmental variable CFLAGS when building software. The CFLAGS
flag specifies desired optimization/CPU instruction for C code.

Default: -march=@ARCH@ -mtune=generic -O2 -pipe

=head2 CXXFLAGS

Set the environmental variable CXXFLAGS when building software. The CXXFLAGS
flag specifies desired optimization/CPU instruction for C++ code.

Default: -march=@ARCH@ -mtune=generic -O2 -pipe

=head2 CPPFLAGS

Set the environmental variable CPPFLAGS when building software. The CPPFLAGS
flag specifies desired C PreProcessor instruction for C code.

Default: 


=head2 LDFLAGS

Set the environmental variable LDFLAGS when building software. The LDFLAGS
flag specifies desired linker options.

Default: -Wl,--hash-style=gnu -Wl,--as-needed

=head2 MAKEFLAGS

Set the environmental variable MAKEFLAGS when building software. The MAKEFLAGS
flag specifies desired `make` options.

Default: -j@JOBS@

=head2 PURGE_PATHS

Set a regular expression of paths to be purged after the software is installed
but before creating tarball for it. Common conflicting files as well as some
useless files are already set to be removed.

Default: .*\.la|.*/\.packlist|.*/perllocal.pod|.*/share/info|.*/share/gtk-doc

=head2 COMPRESS_MAN

Set whether to compress manual pages. Doing so will save you some space.

Default: True

=head2 STRIP_BINARIES

Set whether to strip all symbols from binaries. This reduces the size of
the binaries but it may corrupt some of them.

Default: True

=head2 STRIP_SHARED

Set whether to strip all symbols that are not needed for relocation
processing from shared libraries. This reduces the size of the shared
libraries but it may corrupt some of them.

Default: True

=head2 STRIP_STATIC

Set whether to strip debugging symbols from static libraries. This reduces
the size of the static libraries but it may corrupt some of them.

Default: True

=head2 IGNORE_MISSING

Set whether to ignore missing runtime dependencies. This is used only as a
workaround for false positives.

Default: False

=head2 IGNORE_PERMISSIONS

Set whether to ignore ownership of files and directories as well as
non-executable binaries and libraries. When this option is off it increases the
security by making sure that files are not owned by non-system user (usually
with GID/UID that is greater or equal to 1000) and in addition it makes sure
that binaries and libraries are executable which may have the opposite effect.
By setting it to True you open up a chance for non-system users to temper with
paths that they should not but may close another in case the package manager
automatically sets the executable bit for binaries and libraries for which
that is not desired.

Default: False

=head2 CONFLICTS

Set whether to check for conflicting files/links when merging targets. It is
not wise to set this to False because files from one local target may get
removed upon removing/upgrading other local target when footprints overlap.
This may break the system in which case your fridge should have your favourite
alcohol drink to ease the pain.

Default: True

=head2 BACKUP

Set whether to backup files when merging targets.

Default: True

=head2 SCRIPTS

Set whether to execute pre/post script actions when merging targets.

Default: True

=head2 TRIGGERS

Set whether to execute triggers when merging targets.

Default: True

=head1 EXAMPLES

[spm]

CACHE_DIR = /var/cache/spm

BUILD_DIR = /var/tmp/spm

ROOT_DIR = /

GPG_DIR = /etc/spm/gpg

IGNORE = glibc zlib bash

=head1 FILES

/etc/spm.conf

/etc/spm/repositories.conf

/etc/spm/mirrors.conf

/etc/spm/keyservers.conf

=head1 AUTHORS

Ivailo Monev (a.k.a. SmiL3y) <xakepa10@laimg.moc>

Copyright (c) 2012-2017 Ivailo Monev licensed through custom license, see the
COPYING file bundled with the source code.

=head1 SEE ALSO

spm(8) SRCBUILD(5) gpg(1) bash(1) gcc(1) ld(1) make(1) strip(1)
